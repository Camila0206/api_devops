name: Docker Publish

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Static Code Linting with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
  build-and-publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .  # Replace with the path to your Dockerfile if different
          push: true
<<<<<<< HEAD
          tags: victorm44/mysql:${{ github.sha }}
=======
          tags: victorm44/mysql:${{ github.sha }}

    manual-approval:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Approval Message
        uses: rtCamp/action-slack-notify@v2
        with:
          status: 'Send approval message'
          text: 'La imagen de Docker se ha construido y está lista para su aprobación. ¿Deseas aprobarla para su implementación?'
          channel: '#tu-canal-de-slack'
          token: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Wait for Slack Approval
        id: approval
        run: |
          echo "Esperando aprobación..."
          response=$(curl -s "https://slack.com/api/conversations.history?channel=tu-canal-de-slack" -H "Authorization: Bearer $SLACK_BOT_TOKEN")
          if echo "$response" | jq -e '.messages[0].text | contains("Aprobado")' > /dev/null; then
            echo "Aprobación recibida. Continuando con la implementación."
            echo "::set-output name=approved::true"
          else
            echo "La implementación no fue aprobada. Deteniendo la subida."
            echo "::set-output name=approved::false"
          fi
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

>>>>>>> 555e9b76fffe69c7b6354c2b4e14850093892b55
